/*ESTABLECER AJUSTES INICIALES*/

:root{ /*Establecemos paleta de colores*/
    --primary-color: #DD006F;
    --primary-color-light: #f1609f;
    --primary-color-hard: #b10264;
    --secondary-color-light: #00dd6f;
    --secondary-color-light: #95ecae;
    --secondary-color-hard: #009f2b;
    --accent-color: #dd0000;
    --blanco-1: #ffff;
    --blanco-2: #f8f5f5;
    --gris-1: #e6e3e3;
    --gris-2: #3f3f3f;
}

*{ /*Le indicamos que dentro de la medida del elemento o contenedor incluya el padding y el margin*/
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    width: 100vw; /*No es siempre necesario*/
    height: 100vh; /*No es siempre necesario. En caso de en móvil querer aplicar un Bottom Bar fijo, tendríamos que darle un valor mayor, por ejemplo,
    en 160vh podemos colocar una bottom bar sin problemas y se ve todo el contenido*/
}

/*CONFIGURACIÓN RESPONSIVE: Trabajando con Bloques, Contenedores y Elementos*/

/*1) Configuración responsive para BLOQUES en Grid*/

.bloques{
    width: 95%;
    gap: 1rem;
    margin: auto;
    margin-top: 1rem; /*No es siempre necesario, depende del diseño*/
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr)); 
    /*Auto-fit minmax, permite establecer un mínimo y y un máximo de los contenedores dentro del bloque. Lo que hace es que a partir de menos de 20 rem el contenedor no se ahique más y pase uno abajo del otro y que a partir de más de 20rem se ponga uno al lado del otro. Siempre llenando el total del ancho disponible.*/
    /*Se puede usar Auto-fill minmax también. ESTE SE USA CUANDO HAY MUCHOS ELEMENTOS DENTRO DEL CONTENEDOR y no hace falta la FUNCIÓN DE FIT para que ocupe el espacio.*/
    /*Las filas no es siempre necesario declararlas*/
 
 }

/*2) Configuración responsive para CONTENEDORES en Grid*/

.contenedor{ /*Reemplazar clase por la del archivo correspondiente*/

    background-color: var(--blanco-1);
    width: 100%; /*Usar porcentaje sirve para responsive. Podemos poner 100% porque en el BLOQUE le dijimos que sea del 95%*/
    max-width: 43rem; /*Le indicamos que como máximo crezca hasta 43 rem, sirve para que cuando se vea en ordenador, no ocupe el 85% sino que deje
    espacio para otro contendor mejorando la visibilidad y la adaptación. Se puede usar uno distinto a 43 rem, depende del diseño*/
    height: 100%; /*Le damos un alto. El 100% se adapta al total de su contenedor*/
    margin: auto; /*Centramos el contenedor*/
    padding: 1rem;
    border-radius: 1rem;
    box-shadow: 0.3rem 0.3rem 0.3rem rgb(204, 201, 201);
    display: grid;
    gap: 0.5rem;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(5, 2rem);
}

/*3) Configuración responsive para ELEMENTOS en Grid*/

.elemento{ /*Reemplazar clase por la del archivo correspondiente. Los valores SON ORIENTATIVOS, deben adaptarse a cada elemento diseñado*/
    background-color: var(--gris-1);
    width: 60%; /*Esto sirve para agrandar y achicar el elemento en relación a su contenedor.
    Si el contenedor crece, este elemento también y si se achica, lo mismo.*/
    height: 80%; /*Esto sirve para agrandar y achicar el elemento en relación a su contenedor.
    Si el contenedor crece, este elemento también y si se achica, lo mismo.*/
    border-radius: 1rem;
    justify-self: center;
    align-self: center;
}

/*ATAJOS PARA CONFIGURAR ELEMENTOS Y RECURSOS*/

/*Box shadow testeada*/ /*Se debe copiar la siguiente información dentro de una clase en CSS*/

.box-shadow{ /*Reemplazar clase por la del archivo correspondiente*/
    box-shadow: 0.3rem 0.3rem 0.3rem rgb(204, 201, 201);
}

/*Botoom Bar para móvil*/ /*Se debe copiar la siguiente información dentro de una clase en CSS*/

.bottom-bar{ /*ATENCIÓN: Solo funciona si en el HTML colocamos "br". Probé con 6 y funcionó. ¿Dónde se coloca? Dentro del footer colocamos 6br y
    después un div con la clase bottom-bar. Luego, cerramos el footer.*/
    width: 100%;
    height: 3.5rem; /*Esta medida sale de los 16px de arriba y abajo + los 24px que tiene que medir los iconos. Se PUEDE AJUSTAR*/
    padding: 1rem; /*1 rem, por defecto son 16px y es el establecido en Material.io como el que tiene que tener. A su vez, los iconos tendrían
    que medir 24px de alto, es decir 1.5rem*/
    background-color: var(--primary-color);
    position: fixed; /*Indicamos que se quede fijo el menú cuando hacemos scroll*/
    bottom: 0; /*Al poner bottom 0, indicamos que la distancia del bottom (parte inferior) sea 0, es decir va a estar ubicado totalmente abajo*/
    
}